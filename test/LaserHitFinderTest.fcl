#include "geometry.fcl"
#include "reco_uboone_data_minimal.fcl"
#include "laserreco.fcl"
process_name: LaserHitFinderTest

services.DetectorClocksService.InheritClockConfig: false
services.DatabaseUtil.ShouldConnect: false
services.DetPedestalService.DetPedestalRetrievalAlg.UseDB: true

services:
{
  scheduler:               { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService:            { fileName: "LaserHitFinderTest.root" }
  Timing:                  {}
  RandomNumberGenerator:   {} #ART native random number generator
  @table::microboone_reco_minimal_services
  message: @local::standard_info
}
services.DetectorClocksService.InheritClockConfig: false
services.DatabaseUtil.ShouldConnect: false
services.DetPedestalService.DetPedestalRetrievalAlg.UseDB: true

source:
{
  module_type: RootInput
  maxEvents:  1        # Number of events to create
}

outputs:
{
}

physics:
{
    analyzers:
    {
      LaserHitFinder: { module_type: "LaserHitFinderTest"

      GenerateWireMap:         false
      UseROI:            false
      HitBoxSize:              10       #cm

      LaserRecoModuleLabel:       "daq"
      LaserDataMergerModuleLabel: "LaserDataMerger"
      LaserBeamInstanceLabel:     "LaserBeam"

      MinAllowedChannelStatus: 4

      # High amplitude threshold for high signal exceptions for all planes
      HighAmplThreshold:       1000

      # U-Plane hit thresholds
      UHitPeakThreshold:      -25.0
      UAmplitudeToWidthRatio:  1
      UHitWidthThreshold:      10

      # V-Plane hit thresholds
      VHitPeakThreshold:       10.0
      VAmplitudeToWidthRatio:  1.0
      VAmplitudeToRMSRatio:    2.0
      VHitWidthThreshold:      12
      VRMSThreshold:           4

      # Y-Plane hit thresholds
      YHitPeakThreshold:       10.0
      YAmplitudeToWidthRatio:  1.5
      YHitWidthThreshold:      6

      }
    }

    #define the path for analyzer modules, order does not matter.
    #see lines starting physics.analyzers below
    ana:  [ LaserHitFinder ]

    #trigger_paths is a keyword and contains the paths that modify the art::event,
    #ie filters and producers
    trigger_paths: [ ana ]

    #end_paths is a keyword and contains the paths that do not modify the art::Event,
    #ie analyzers and output streams.  these all run simultaneously
    #end_paths:     [ana]
}


