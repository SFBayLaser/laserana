#include "geometry.fcl"
#include "reco_uboone_data_minimal.fcl"
#include "laserreco.fcl"

process_name: LaserMergerTest

services.DetectorClocksService.InheritClockConfig: false
services.DatabaseUtil.ShouldConnect: false
services.DetPedestalService.DetPedestalRetrievalAlg.UseDB: true

services:
{
  scheduler:               { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService:            { fileName: "LaserHits.root" }
  Timing:                  {}
  RandomNumberGenerator:   {} #ART native random number generator
  @table::microboone_reco_minimal_services
  message: @local::standard_info
}


#source is now a root file
source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:   5          # Number of events to create
  firstRun:    10000           # Run number to use for this file
  firstEvent:  0           # number of first event in the file
}


# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
 producers:
 {
    LaserRawDigitGenerator:
    {
      DEBUG: false
      module_type: "LaserRawDigitGenerator"
      RawDigitFile: "HitDefs-10000.txt"
      NoiseAmplitude: 0
      #NumberTimeSamples: 200 # just for testing purposes

      RawDigitLabel: ""
    }
    LaserDataMerger:
    {
      module_type:          "LaserDataMerger"
      ReadTimeMap:          true
      GenerateTimeInfo:     false
      Debug: false

      # These are all calibration values, only change them if you know what you
      # are doing!
      TickToAngle:          1                   # conversion constant for linear encoder
      DirCalLCS1:           [0. , 349900.]           # Direction Calibration
      DirCalLCS2:           [1. , 1.]       # Direction Calibration (161.568deg for straight -180deg to invert )
      PositionLCS1:         [0. , 0., 0.]           # Position of Mirror
      PositionLCS2:         [1. , 1., 1]  #
      EnergyMinMaxLCS1:     [0, 4]
      EnergyMinMaxLCS2:     [0, 4]
    }
 }
 analyzers:
    {
        LaserMergerTest:
        {
            module_type:         "LaserMergerTest"
            TestConfigFile:      "HitDefs-10000.txt"

            MergerModul: "LaserDataMerger"
            MergerLabel:  "LaserBeam"
        }
    }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 reco: [ LaserRawDigitGenerator, LaserDataMerger ]

 test: [LaserMergerTest]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [reco]

 end_paths:     [reco, test]

}
