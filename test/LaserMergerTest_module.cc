////////////////////////////////////////////////////////////////////////
// Class:       LaserMergerTest
// Module Type: analyzer
// File:        LaserMergerTest_module.cc
//
// Generated at Fri Oct 28 13:49:04 2016 by matthias,,, using artmod
// from cetpkgsupport v1_10_01.
////////////////////////////////////////////////////////////////////////

#include "art/Framework/Core/EDAnalyzer.h"
#include "art/Framework/Core/ModuleMacros.h"
#include "art/Framework/Principal/Event.h"
#include "art/Framework/Principal/Handle.h"
#include "art/Framework/Principal/Run.h"
#include "art/Framework/Principal/SubRun.h"
#include "art/Utilities/InputTag.h"
#include "fhiclcpp/ParameterSet.h"
#include "messagefacility/MessageLogger/MessageLogger.h"
#include "LaserObjects/LaserHits.h"

#include "LaserObjects/LaserUtils.h"

class LaserMergerTest;

class LaserMergerTest : public art::EDAnalyzer {
public:
    explicit LaserMergerTest(fhicl::ParameterSet const &p);
    // The destructor generated by the compiler is fine for classes
    // without bare pointers or other resource use.

    // Plugins should not be copied or assigned.
    LaserMergerTest(LaserMergerTest const &) = delete;

    LaserMergerTest(LaserMergerTest &&) = delete;

    LaserMergerTest &operator=(LaserMergerTest const &) = delete;

    LaserMergerTest &operator=(LaserMergerTest &&) = delete;

    // Required functions.
    void analyze(art::Event const &e) override;

    void reconfigure(fhicl::ParameterSet const &pset) override;

    void beginJob() override;

private:



    std::vector<std::vector<std::vector<float> > > RawDigitDefs; ///< line by line csv container
    std::string fHitModul, fHitLabel;
    std::string fTestConfigFile;
};


LaserMergerTest::LaserMergerTest(fhicl::ParameterSet const &pset)
        :
        EDAnalyzer(pset)  // ,
// More initializers here.
{
    this->reconfigure(pset);
}

void LaserMergerTest::analyze(art::Event const &event) {
    auto id = event.id().event();
    auto DigitTag = art::InputTag(fHitModul, fHitLabel );

    art::ValidHandle <lasercal::LaserBeam> LaserBeam = event.getValidHandle<lasercal::LaserBeam>(DigitTag);


    if (fTestConfigFile.compare("HitDefs-10000.txt") == 0) {
        std::cout << "==> Testing Merging Laser " << id << std::endl;
        assert(LaserBeam->GetLaserID() == 1);
    }

}

void LaserMergerTest::reconfigure(fhicl::ParameterSet const &pset) {
    fHitModul = pset.get<std::string>("MergerModul");
    fHitLabel = pset.get<std::string>("MergerLabel");
    fTestConfigFile = pset.get<std::string>("TestConfigFile");
}

void LaserMergerTest::beginJob() {
}


DEFINE_ART_MODULE(LaserMergerTest)
