#include "geometry.fcl"
#include "reco_uboone_data_minimal.fcl"

process_name: LaserHitReco

services.DetectorClocksService.InheritClockConfig: false
services.DatabaseUtil.ShouldConnect: false
services.DetPedestalService.DetPedestalRetrievalAlg.UseDB: true

services:
{
  scheduler:               { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService:            { fileName: "LaserHits.root" }
  Timing:                  {}
  RandomNumberGenerator:   {} #ART native random number generator
  @table::microboone_reco_minimal_services
  message: @local::standard_info
}


#source is now a root file
source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:   6           # Number of events to create
  firstRun:    999999           # Run number to use for this file
  firstEvent:  0           # number of first event in the file
}


# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
 producers:
 {
    LaserRawDigitGenerator:
    {
      DEBUG: false
      module_type: "LaserRawDigitGenerator"
      RawDigitFile: "RawDigits_test.txt"
      NoiseAmplitude: 0
      #NumberTimeSamples: 200 # just for testing purposes

      RawDigitLabel: ""
    }
    LaserDataMerger:
    {
      module_type:          "LaserDataMerger"
      ReadTimeMap:          true
      GenerateTimeInfo:     false

      # These are all calibration values, only change them if you know what you
      # are doing!
      TickToAngle:          1                   # conversion constant for linear encoder
      DirCalLCS1:           [0. , 0.]           # Direction Calibration
      DirCalLCS2:           [-18.432 , 10500000.]       # Direction Calibration (161.568deg for straight -180deg to invert )
      PositionLCS1:         [103. , 0., -20.]           # Position of Mirror
      PositionLCS2:         [103. , 0., 1056.8]  #
      EnergyMinMaxLCS1:     [8000, 12500]
      EnergyMinMaxLCS2:     [8000, 12500]
    }

    LaserSpotterGenTest: {
        module_type: "LaserSpotterGenTest"
        TestConfigFile: "RawDigits_test.txt"
    }
 }
 filters:
      {
        LaserSpotter:
        {
          LaserRecoModuleLabel:       "LaserRawDigitGenerator"
          LaserDataMergerModuleLabel: "LaserDataMerger"
          LaserBeamInstanceLabel:     "LaserBeam"

          module_type:         "LaserSpotter"

          PedestalSubtract:       false

          # Box definitions for both laser systems
          CenterTicks:           [5130, 5063]
          TickWidths:            [200, 200]
          WireBoxes:             [[0,100],[3400,3500]]

          # Filter criterias:
          MinHits:               10 # minimal amout of Wires with hit

          # Hit Finder Definitons (only Y Hit Finder is used)
          GenerateWireMap:         false
          UseROI:            false
          HitBoxSize:              10       #cm

          MinAllowedChannelStatus: 4

          # High amplitude threshold for high signal exceptions for all planes
          HighAmplThreshold:       1000

          # U-Plane hit thresholds
          UHitPeakThreshold:      -25.0
          UAmplitudeToWidthRatio:  1
          UHitWidthThreshold:      10

          # V-Plane hit thresholds
          VHitPeakThreshold:       10.0
          VAmplitudeToWidthRatio:  1.0
          VAmplitudeToRMSRatio:    2.0
          VHitWidthThreshold:      12
          VRMSThreshold:           4

          # Y-Plane hit thresholds
          YHitPeakThreshold:       10.0
          YAmplitudeToWidthRatio:  1.5
          YHitWidthThreshold:      6
        }
      }
 analyzers:
      {

      }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 reco: [ LaserRawDigitGenerator, LaserDataMerger, LaserSpotter, LaserSpotterGenTest]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [reco]

 #end_paths:     [reco]
}
