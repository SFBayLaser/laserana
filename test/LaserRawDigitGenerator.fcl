#include "geometry.fcl"
#include "reco_uboone_data_minimal.fcl"

process_name: LaserRawDigitGenerator

services.DetectorClocksService.InheritClockConfig: false
services.DatabaseUtil.ShouldConnect: false
services.DetPedestalService.DetPedestalRetrievalAlg.UseDB: true

services:
{
  ExptGeoHelperInterface:    @local::standard_geometry_helper
  Geometry:                  @local::standard_geo
  @table::microboone_reco_minimal_services
}

source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:   4           # Number of events to create
  firstRun:    1           # Run number to use for this file
  firstEvent:  0           # number of first event in the file
}

outputs:
{
}

physics:
{
    producers:
    {
      LaserRawDigitGenerator: { module_type: "LaserRawDigitGenerator"
            RawDigitFile: "RawDigits.txt"
            NoiseAmplitude: 1
            NumberTimeSamples: 200 # just for testing purposes

            RawDigitLabel: "RawDigitTest"
       }
    }

    #define the path for analyzer modules, order does not matter.
    #see lines starting physics.analyzers below
    ana:  [ LaserRawDigitGenerator ]
    stream1:  [ out1 ]


    #trigger_paths is a keyword and contains the paths that modify the art::event,
    #ie filters and producers
    trigger_paths: [ ana ]

    #end_paths is a keyword and contains the paths that do not modify the art::Event,
    #ie analyzers and output streams.  these all run simultaneously
    #end_paths:     [ana]
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "RawGen.root"
   #sam_ignore:  true
   dataTier:    "reconstructed-2d"
   compressionLevel: 1
 }
}
